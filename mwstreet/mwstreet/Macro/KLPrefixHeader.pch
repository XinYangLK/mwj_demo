//
//  KLPrefixHeader.pch
//  mengWuStreet
//
//  Created by 科pro on 2018/12/14.
//  Copyright © 2018 xunben. All rights reserved.
//

#ifndef KLPrefixHeader_pch
#define KLPrefixHeader_pch
#import "KLConstantHeader.h"
#import "KLFieldHeader.h"

//***  不同环境下打印日志  **/
#ifdef DEBUG
#define  KLLog(...)  printf("[%s] %s [第%d行]: %s\n", __TIME__ ,__PRETTY_FUNCTION__ ,__LINE__, [[NSString stringWithFormat:__VA_ARGS__] UTF8String])
#else
#define NSLog(...)
#endif


//*** 弱引用处理  **/
#define klWeakSelf       __weak __typeof(&*self) weakSelf = self

//*** 数据存储单例  **/
#define kUSER_DEFAULT   [NSUserDefaults standardUserDefaults]

//***  注册cell  **/
#define kCellIdentifier(Class)  [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([Class class])];
//***  注册 hearder / footer  **/
#define kHeaderFooterIdentifier(Class) [tableView dequeueReusableHeaderFooterViewWithIdentifier:NSStringFromClass([Class class])];


//***  常用颜色和色值 处理  **/
//***  16进制色值  **// 例：HEXCOLOR(0x333333)
#define HEXCOLOR(hex)   [UIColor colorWithRed:((float)((hex & 0xFF0000) >> 16)) / 255.0 green:((float)((hex & 0xFF00) >> 8)) / 255.0 blue:((float)(hex & 0xFF)) / 255.0 alpha:1]
//***  16进制色值  **// 例：COLOR(@"#f2f2f2")
#define COLOR(hex) [UIColor colorFromHexCode:hex]
//***  RGBA  色值 **/
#define RGBA(r,g,b,a)      [UIColor colorWithRed:r/255.0f green:g/255.0f blue:b/255.0f alpha:a]
#define RGB(r,g,b)         RGBA(r,g,b,1.0f)    // RGB
#define RGBSigle(x)        RGB(x,x,x)          // 单色 黑->白
#define MainColor          RGB(247,124,180)    // 主打色//255,167,197
#define BMainColor         RGB(255,167,197)

#define XMainColor         RGB(255,203,221)

#define RedColor           RGB(255,76,101)      // 红色
#define MainAlphaColor(x)  RGBA(247,124,180,x) // 主打色加r透明
#define WhiteAlphaColor(x) RGBA(255,255,255,x) // 白色加r透明
#define AlphaColor(x,a)    RGBA(x,x,x,a)       // 单色透明
#define TitleColor         RGBSigle(102)       // 一级字体颜色
#define TextColor          RGBSigle(153)       // 二级字体颜色
#define LineColor          RGBSigle(220)       // 分割线颜色
//#define SpacColor          RGB(249,251,251)    // 分割条间距颜色
#define BackgroundColor    RGBSigle(236)       // 背景色
#define SpacColor          RGB(242,242,242)    // 分割条间距颜色


//***  随机色  **/
#define ARCColor           RGB(arc4random()%255,arc4random()%255,arc4random()%255)

/**
 *   iPhone 5         4.0寸    320 x 568 -----  1136 x 640              -----  320÷568=0.563
 *   iPhone 5S/5C     4.0寸    320 x 568 -----  1136 x 640
 *   iPhone 6         4.7寸    375 x 667 -----  1334 x 750              -----  375÷667=0.562
 *   iPhone 6S        4.7寸    375 x 667 -----  1334 x 750
 *   iPhone 6 Plus    5.5寸    414 x 736 -----  2208 x 1242 (1920x1080) -----  414÷736=0.5625
 *   iPhone 6S Plus   5.5寸    414 x 736 -----  2208 x 1242 (1920x1080)
 *   iPhone SE        4.0寸    320 x 568 -----  1136 x 640
 *   iPhone 7         4.7寸    375 x 667 -----  1334 x 750
 *   iPhone 7 Plus    5.5寸    414 x 736 -----  2208 x 1242 (1920x1080)
 *   iPhone 8         4.7寸    375 x 667 -----  1334 x 750
 *   iPhone 8 Plus    5.5寸    414 x 736 -----  2208 x 1242 (1920x1080)
 *   iPhone X         5.8寸    375 x 812 -----  2436 × 1125
 *   iPhone XR        6.1寸    414 x 896 -----  1792 x 828              -----  375÷812=0.462
 *   iPhone XS        5.8寸    375 x 812 -----  2436 x 1125             -----  414÷896=0.462
 *   iPhone Xs max    6.5寸    414 x 896 -----  2688 x 1242             -----  414÷896=0.462
 */

//***  获取宽高  **/
#define MainWidth  ([UIScreen mainScreen].bounds.size.width)//宽
#define MainHeight ([UIScreen mainScreen].bounds.size.height)//高

//获取当前语言
#define KCURRENT_LANGUAGE ([[NSLocale preferredLanguages] objectAtIndex:0]);
//判断是否为iPhone
#define KIS_IPHONE (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)
//判断是否为iPad
#define KIS_IPAD   (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)

#define IS_IPHONE_Xr ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)

//不同屏幕尺寸字体适配（375,667是因为效果图为IPHONE6 如果不是则根据实际情况修改）
//***  iPhoneX **/  iPhoneXR：1792 x 828 ，   iPhoneXs： 2436 x 1125 ，  iPhoneXs Max：2688 x 1242
//#define kDevice_Is_iPhoneX \
//\[UIScreen instancesRespondToSelector:@selector(currentMode)] ? \
//\ (CGSizeEqualToSize(CGSizeMake(1125, 2436),[[UIScreen mainScreen] currentMode].size) ||\
//\ CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size) ||\
//\ CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size)) : NO

////判断是否是ipad
//#define isPad ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad)
////判断iPhone4系列
//#define kiPhone4 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 960), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
////判断iPhone5系列
//#define kiPhone5 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
////判断iPhone6 6s 7系列
//#define kiPhone6 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(750, 1334), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
////判断iPhone6p 6sp 7p系列
//#define kiPhone6Plus ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2208), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
////判断iPhoneX，Xs（iPhoneX，iPhoneXs）
//#define IS_IPHONE_X ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
////判断iPhoneXr
//#define IS_IPHONE_Xr ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
////判断iPhoneXsMax
//#define IS_IPHONE_Xs_Max ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size)&& !isPad : NO)

//判断iPhoneX所有系列
//#define kDevice_Is_iPhoneX (IS_IPHONE_X || IS_IPHONE_Xr || IS_IPHONE_Xs_Max)

//#define IPHONE_X (@available(iOS 11.0, *) ？ [[[UIApplication sharedApplication] delegate] window].safeAreaInsets.bottom > 0.0 : NO )

#define kDevice_Is_iPhoneX \
({BOOL isPhoneX = NO;\
if (@available(iOS 11.0, *)) {\
isPhoneX = [[UIApplication sharedApplication] delegate].window.safeAreaInsets.bottom > 0.0;\
}\
(isPhoneX);})


//***  Status Bar Height  **/
#define  StatusBarHeight                  [UIApplication sharedApplication].statusBarFrame.size.height
//***  Safe  Height ---> (iPhoneX \ iPhoneXR \ iPhoneXs \ iPhoneXs Max) **/
#define  TabbarSafeBottomMargin           ((kDevice_Is_iPhoneX) ? 34.f : 0.f)
//***  Tabbar Height  **/
#define  TabbarHeight                     ((kDevice_Is_iPhoneX) ? 83.0f : 49.0f)
//***  Navigation Height  **/
#define  StatusBarAndNavigationBarHeight  ((kDevice_Is_iPhoneX) ? 88.0f : 64.0f)

//***  以 iPhone6s 屏幕做标准适配 效果图为IPHONE6 如果不是则根据实际情况修改 **/


//***  Screen Width Ratio  **/

#define kScreenWidthRatio  (MainWidth / 375.0)

//***  Screen Height Ratio **/

#define kScreenHeightRatio (MainHeight / 667.0)

//***  Get screen aspect width**/

#define AdaptedWidth(x)  ceilf((x) * kScreenWidthRatio)

//***  Get screen aspect height  **/

#define AdaptedHeight(x) ({\
\
float height = 0;\
\
if ([UIScreen instancesRespondToSelector:@selector(currentMode)]) {\
\
if (kDevice_Is_iPhoneX) {\
\
height = ceilf((x) * kScreenHeightRatio / 812 * 375 * 736 / 414);\
\
}else{\
\
height = ceilf((x) * kScreenHeightRatio);\
\
}\
}else{\
\
height = ceilf((x) * kScreenHeightRatio);\
\
}\
\
height;\
\
})


//***  字体大小适配  **/
#define BOLDSYSTEMFONT(FONTSIZE)   [UIFont boldSystemFontOfSize:FONTSIZE]
#define SYSTEMFONT(FONTSIZE)       [UIFont systemFontOfSize:FONTSIZE]
//*** 字体大小 -- 粗体  **/
#define AdaptedBOLDSYSFontSize(R)  BOLDSYSTEMFONT(AdaptedWidth(R))
//*** 字体大小 -- 常规  **/
#define AdaptedSYSFontSize(R)      SYSTEMFONT(AdaptedWidth(R))
//***  常用字号  **/
#define kFont_10  AdaptedSYSFontSize(10)
#define kFont_11  AdaptedSYSFontSize(11)
#define kFont_12  AdaptedSYSFontSize(12)
#define kFont_13  AdaptedSYSFontSize(13)
#define kFont_14  AdaptedSYSFontSize(14)
#define kFont_15  AdaptedSYSFontSize(15)


#endif /* KLPrefixHeader_pch */
